name: Create Repository
on:
  issues:
    types: [opened]

jobs:
  create-repo:
    if: contains(github.event.issue.labels.*.name, 'repository-request')
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Extract issue details
        id: extract
        run: |
          echo "::set-output name=repo_name::$(jq -r '.issue.body' $GITHUB_EVENT_PATH | grep 'repository_name' | cut -d ':' -f2 | xargs)"
          echo "::set-output name=repo_desc::$(jq -r '.issue.body' $GITHUB_EVENT_PATH | grep 'repository_description' | cut -d ':' -f2 | xargs)"
          echo "::set-output name=repo_visibility::$(jq -r '.issue.body' $GITHUB_EVENT_PATH | grep 'repository_visibility' | cut -d ':' -f2 | xargs)"

      - name: Create repository
        uses: actions/github-script@v6
        with:
          script: |
            const repo_name = '${{ steps.extract.outputs.repo_name }}';
            const repo_desc = '${{ steps.extract.outputs.repo_desc }}';
            const repo_visibility = '${{ steps.extract.outputs.repo_visibility }}' === 'Private';
            const response = await github.repos.createInOrg({
              org: context.repo.owner,
              name: repo_name,
              description: repo_desc,
              private: repo_visibility
            });
            console.log(response);

      - name: Update issue status
        run: |
          gh issue comment ${{ github.event.issue.number }} --body "Repository created successfully!"
          gh issue edit ${{ github.event.issue.number }} --state closed