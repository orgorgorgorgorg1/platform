name: Terraform

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

on: [workflow_dispatch]

env:
  ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
  ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
  github_token: ${{ secrets.ORG_CREATE_TOKEN }}
  github_enterprise_slug: TyroneTyrone
  github_organization: ${{ github.repository_owner}}
      
jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./tf

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.10.5

    - name: Terraform Init
      run: |
        terraform init \
          -backend-config="resource_group_name=${{ secrets.TF_BACKEND_RG }}" \
          -backend-config="storage_account_name=${{ secrets.TF_BACKEND_SA_NAME }}" \
          -backend-config="container_name=tfstate" \
          -backend-config="key=terraform.tfstate" || export exitcode=$?
      env:
        ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
        ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
        ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
        ARM_CLIENT_SECRET: "${{ secrets.AZURE_CLIENT_SECRET }}"
    - name: Terraform Plan
      run: |
        terraform plan \
         -var "github_enterprise_slug=TyroneTyrone" \
         -var "github_token=${{ secrets.ORG_CREATE_TOKEN }}" \
         -var "github_organization=${{ github.repository_owner}}" \
         -out=tfplan || export exitcode=$?
        
        echo "exitcode=$exitcode" >> $GITHUB_OUTPUT
        
        if [ $exitcode -eq 1 ]; then
          echo Terraform Plan Failed!
          exit 1
        else 
          exit 0
        fi            
      env:
        ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
        ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
        ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
        ARM_CLIENT_SECRET: "${{ secrets.AZURE_CLIENT_SECRET }}"
    - name: Upload the plan
      uses: actions/upload-artifact@v4
      with:
        name: tf-plan
        path: ./        
  deployment:
    runs-on: ubuntu-latest
    environment: productie
    defaults:
      run:
        shell: bash
        working-directory: ./tf
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.10.5

    - name: Terraform Init
      run: |
        terraform init \
          -backend-config="resource_group_name=${{ secrets.TF_BACKEND_RG }}" \
          -backend-config="storage_account_name=${{ secrets.TF_BACKEND_SA_NAME }}" \
          -backend-config="container_name=tfstate" \
          -backend-config="key=terraform.tfstate" || export exitcode=$?
      env:
        ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
        ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
        ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
        ARM_CLIENT_SECRET: "${{ secrets.AZURE_CLIENT_SECRET }}"

    - name: Download the plan
      uses: actions/download-artifact@v4
      with:
        name: tf-plan
        path: ./        

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main'
      env:
        ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
        ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
        ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
        ARM_CLIENT_SECRET: "${{ secrets.AZURE_CLIENT_SECRET }}"
      run: terraform apply -auto-approve tfplan